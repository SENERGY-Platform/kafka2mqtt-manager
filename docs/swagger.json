{
    "swagger": "2.0",
    "info": {
        "title": "Kafka2MQTT API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "basePath": "/",
    "paths": {
        "/instances": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Provides a list of instances",
                "produces": [
                    "application/json"
                ],
                "summary": "Get instances",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Instance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates an instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update an instance",
                "parameters": [
                    {
                        "description": "Instance to update",
                        "name": "instance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Instance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates an instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create an instance",
                "parameters": [
                    {
                        "description": "Instance to create",
                        "name": "instance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Instance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Instance"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a single instance",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete instances",
                "parameters": [
                    {
                        "description": "IDs of the instances to delete",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/instances/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Provides a single instance",
                "produces": [
                    "application/json"
                ],
                "summary": "Get instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the requested instance",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Instance"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a single instance",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the instance to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/accessible/kafka2mqtt": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list accessible resource ids",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "list accessible resource ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "checked permissions in the form of 'rwxa', defaults to 'r'",
                        "name": "permissions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limits size of result; 0 means unlimited",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset to be used in combination with limit",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/check/kafka2mqtt": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check multiple permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "check multiple permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Ids, comma seperated",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "checked permissions in the form of 'rwxa', defaults to 'r'",
                        "name": "permissions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/check/kafka2mqtt/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "check permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "checked permissions in the form of 'rwxa', defaults to 'r'",
                        "name": "permissions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/manage/kafka2mqtt": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "lists resources the user has admin rights to",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "lists resources the user has admin rights to",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limits size of result; 0 means unlimited",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset to be used in combination with limit",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/manage/kafka2mqtt/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get resource, requesting user must have admin right  on the resource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "get resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Resource"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get resource rights, requesting user must have admin right",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "set resource rights",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "if set to true, the response will be sent after the corresponding kafka done signal has been received",
                        "name": "wait",
                        "in": "query"
                    },
                    {
                        "description": "Topic",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ResourcePermissions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResourcePermissions"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/permissions/kafka2mqtt": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list the computed permissions to resources of the given topic (kafka2mqtt) and ids, group and user permissions are merged, unknown ids will get entries in the result",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "list the computed permissions to resources of the given topic (kafka2mqtt) and ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Ids, comma seperated",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ComputedPermissions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/permissions/query/permissions/kafka2mqtt": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list the computed permissions to resources of the given topic (kafka2mqtt) and ids, group and user permissions are merged, unknown ids will get entries in the result",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions-kafka2mqtt"
                ],
                "summary": "list the computed permissions to resources of the given topic (kafka2mqtt) and ids",
                "parameters": [
                    {
                        "description": "Resource Ids",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ComputedPermissions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ComputedPermissions": {
            "type": "object",
            "properties": {
                "administrate": {
                    "type": "boolean"
                },
                "execute": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "write": {
                    "type": "boolean"
                }
            }
        },
        "model.Instance": {
            "type": "object",
            "required": [
                "EntityName",
                "Filter",
                "FilterType",
                "Name",
                "Offset",
                "ServiceName",
                "Topic"
            ],
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "CustomMqttBaseTopic": {
                    "type": "string"
                },
                "CustomMqttBroker": {
                    "type": "string"
                },
                "CustomMqttPassword": {
                    "type": "string"
                },
                "CustomMqttUser": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "EntityName": {
                    "type": "string"
                },
                "Filter": {
                    "type": "string"
                },
                "FilterType": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Offset": {
                    "type": "string"
                },
                "ServiceName": {
                    "type": "string"
                },
                "Topic": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "Values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Value"
                    }
                },
                "generated": {
                    "type": "boolean"
                }
            }
        },
        "model.PermissionsMap": {
            "type": "object",
            "properties": {
                "administrate": {
                    "type": "boolean"
                },
                "execute": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "write": {
                    "type": "boolean"
                }
            }
        },
        "model.Resource": {
            "type": "object",
            "properties": {
                "group_permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PermissionsMap"
                    }
                },
                "id": {
                    "type": "string"
                },
                "role_permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PermissionsMap"
                    }
                },
                "topic_id": {
                    "type": "string"
                },
                "user_permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PermissionsMap"
                    }
                }
            }
        },
        "model.ResourcePermissions": {
            "type": "object",
            "properties": {
                "group_permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PermissionsMap"
                    }
                },
                "role_permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PermissionsMap"
                    }
                },
                "user_permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PermissionsMap"
                    }
                }
            }
        },
        "model.Value": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
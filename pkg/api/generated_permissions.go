
//GENERATED FILE -- DO NOT EDIT
//base template generated in github.com/SENERGY-Platform/permissions-v2 root dir, with 'go generate ./...'
//result file may be generated by client.GenerateGoFileWithSwaggoCommentsForPermissionsRequestsForwarding()

/*
 * Copyright 2024 InfAI (CC SES)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package api



// GeneratedCheckPermission_kafka2mqtt godoc
// @Summary      check permission
// @Description  check permission
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        id path string true "Resource Id"
// @Param        permissions query string false "checked permissions in the form of 'rwxa', defaults to 'r'"
// @Produce      json
// @Success      200 {object} bool
// @Failure      400
// @Failure      401
// @Failure      500
// @Router       /permissions/check/kafka2mqtt/{id} [get]
func GeneratedCheckPermission_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedCheckMultiplePermissions_kafka2mqtt godoc
// @Summary      check multiple permissions
// @Description  check multiple permissions
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        ids query string true "Resource Ids, comma seperated"
// @Param        permissions query string false "checked permissions in the form of 'rwxa', defaults to 'r'"
// @Produce      json
// @Success      200 {object} map[string]bool
// @Failure      400
// @Failure      401
// @Failure      500
// @Router       /permissions/check/kafka2mqtt [get]
func GeneratedCheckMultiplePermissions_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedListAccessibleResourceIds_kafka2mqtt godoc
// @Summary      list accessible resource ids
// @Description  list accessible resource ids
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        permissions query string false "checked permissions in the form of 'rwxa', defaults to 'r'"
// @Param        limit query integer false "limits size of result; 0 means unlimited"
// @Param        offset query integer false "offset to be used in combination with limit"
// @Produce      json
// @Success      200 {array} string
// @Failure      400
// @Failure      401
// @Failure      500
// @Router       /permissions/accessible/kafka2mqtt [get]
func GeneratedListAccessibleResourceIds_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedListComputedPermissions_kafka2mqtt godoc
// @Summary      list the computed permissions to resources of the given topic (kafka2mqtt) and ids
// @Description  list the computed permissions to resources of the given topic (kafka2mqtt) and ids, group and user permissions are merged, unknown ids will get entries in the result
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        ids query string true "Resource Ids, comma seperated"
// @Produce      json
// @Success      200 {array} model.ComputedPermissions
// @Failure      400
// @Failure      401
// @Failure      500
// @Router       /permissions/permissions/kafka2mqtt [get]
func GeneratedListComputedPermissions_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedQueryListComputedPermissions_kafka2mqtt godoc
// @Summary      list the computed permissions to resources of the given topic (kafka2mqtt) and ids
// @Description  list the computed permissions to resources of the given topic (kafka2mqtt) and ids, group and user permissions are merged, unknown ids will get entries in the result
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        ids body []string true "Resource Ids"
// @Produce      json
// @Success      200 {array} model.ComputedPermissions
// @Failure      400
// @Failure      401
// @Failure      500
// @Router       /permissions/query/permissions/kafka2mqtt [post]
func GeneratedQueryListComputedPermissions_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedListResourcesWithAdminPermission_kafka2mqtt godoc
// @Summary      lists resources the user has admin rights to
// @Description  lists resources the user has admin rights to
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        limit query integer false "limits size of result; 0 means unlimited"
// @Param        offset query integer false "offset to be used in combination with limit"
// @Produce      json
// @Success      200 {array}  model.Resource
// @Failure      400
// @Failure      401
// @Failure      403
// @Failure      500
// @Router       /permissions/manage/kafka2mqtt [get]
func GeneratedListResourcesWithAdminPermission_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedGetResource_kafka2mqtt godoc
// @Summary      get resource
// @Description  get resource, requesting user must have admin right  on the resource
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        id path string true "Resource Id"
// @Produce      json
// @Success      200 {object}  model.Resource
// @Failure      400
// @Failure      401
// @Failure      403
// @Failure      500
// @Router       /permissions/manage/kafka2mqtt/{id} [get]
func GeneratedGetResource_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



// GeneratedSetPermission_kafka2mqtt godoc
// @Summary      set resource rights
// @Description  get resource rights, requesting user must have admin right
// @Tags         permissions-kafka2mqtt
// @Security Bearer
// @Param        id path string true "Resource Id"
// @Param        wait query bool false "if set to true, the response will be sent after the corresponding kafka done signal has been received"
// @Param        message body model.ResourcePermissions true "Topic"
// @Accept       json
// @Produce      json
// @Success      200 {object}  model.ResourcePermissions
// @Failure      400
// @Failure      401
// @Failure      403
// @Failure      500
// @Router       /permissions/manage/kafka2mqtt/{id} [put]
func GeneratedSetPermission_kafka2mqtt(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}




func GeneratedSwagger(){
	//this method is only used as anchor for swagger documentation
	panic("this method is only used as anchor for swagger documentation")
}



